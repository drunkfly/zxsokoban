# file opened: game.asm
  1   0000
  2   0000              					device 		zxspectrum48
  3   0000
  4   0000              stack_top:
  5   0000
  6   0000              					include		"irq.asm"
# file opened: irq.asm
  1+  0000
  2+  0000              					org			8000h
  3+  8000
  4+  8000              INTERRUPT = 81h
  5+  8000
  6+  8000              irq_vectors:		dup			257
  7+  8000 81          >					db			INTERRUPT
  7+  8001 81          >					db			INTERRUPT
  7+  8002 81          >					db			INTERRUPT
  7+  8003 81          >					db			INTERRUPT
  7+  8004 81          >					db			INTERRUPT
  7+  8005 81          >					db			INTERRUPT
  7+  8006 81          >					db			INTERRUPT
  7+  8007 81          >					db			INTERRUPT
  7+  8008 81          >					db			INTERRUPT
  7+  8009 81          >					db			INTERRUPT
  7+  800A 81          >					db			INTERRUPT
  7+  800B 81          >					db			INTERRUPT
  7+  800C 81          >					db			INTERRUPT
  7+  800D 81          >					db			INTERRUPT
  7+  800E 81          >					db			INTERRUPT
  7+  800F 81          >					db			INTERRUPT
  7+  8010 81          >					db			INTERRUPT
  7+  8011 81          >					db			INTERRUPT
  7+  8012 81          >					db			INTERRUPT
  7+  8013 81          >					db			INTERRUPT
  7+  8014 81          >					db			INTERRUPT
  7+  8015 81          >					db			INTERRUPT
  7+  8016 81          >					db			INTERRUPT
  7+  8017 81          >					db			INTERRUPT
  7+  8018 81          >					db			INTERRUPT
  7+  8019 81          >					db			INTERRUPT
  7+  801A 81          >					db			INTERRUPT
  7+  801B 81          >					db			INTERRUPT
  7+  801C 81          >					db			INTERRUPT
  7+  801D 81          >					db			INTERRUPT
  7+  801E 81          >					db			INTERRUPT
  7+  801F 81          >					db			INTERRUPT
  7+  8020 81          >					db			INTERRUPT
  7+  8021 81          >					db			INTERRUPT
  7+  8022 81          >					db			INTERRUPT
  7+  8023 81          >					db			INTERRUPT
  7+  8024 81          >					db			INTERRUPT
  7+  8025 81          >					db			INTERRUPT
  7+  8026 81          >					db			INTERRUPT
  7+  8027 81          >					db			INTERRUPT
  7+  8028 81          >					db			INTERRUPT
  7+  8029 81          >					db			INTERRUPT
  7+  802A 81          >					db			INTERRUPT
  7+  802B 81          >					db			INTERRUPT
  7+  802C 81          >					db			INTERRUPT
  7+  802D 81          >					db			INTERRUPT
  7+  802E 81          >					db			INTERRUPT
  7+  802F 81          >					db			INTERRUPT
  7+  8030 81          >					db			INTERRUPT
  7+  8031 81          >					db			INTERRUPT
  7+  8032 81          >					db			INTERRUPT
  7+  8033 81          >					db			INTERRUPT
  7+  8034 81          >					db			INTERRUPT
  7+  8035 81          >					db			INTERRUPT
  7+  8036 81          >					db			INTERRUPT
  7+  8037 81          >					db			INTERRUPT
  7+  8038 81          >					db			INTERRUPT
  7+  8039 81          >					db			INTERRUPT
  7+  803A 81          >					db			INTERRUPT
  7+  803B 81          >					db			INTERRUPT
  7+  803C 81          >					db			INTERRUPT
  7+  803D 81          >					db			INTERRUPT
  7+  803E 81          >					db			INTERRUPT
  7+  803F 81          >					db			INTERRUPT
  7+  8040 81          >					db			INTERRUPT
  7+  8041 81          >					db			INTERRUPT
  7+  8042 81          >					db			INTERRUPT
  7+  8043 81          >					db			INTERRUPT
  7+  8044 81          >					db			INTERRUPT
  7+  8045 81          >					db			INTERRUPT
  7+  8046 81          >					db			INTERRUPT
  7+  8047 81          >					db			INTERRUPT
  7+  8048 81          >					db			INTERRUPT
  7+  8049 81          >					db			INTERRUPT
  7+  804A 81          >					db			INTERRUPT
  7+  804B 81          >					db			INTERRUPT
  7+  804C 81          >					db			INTERRUPT
  7+  804D 81          >					db			INTERRUPT
  7+  804E 81          >					db			INTERRUPT
  7+  804F 81          >					db			INTERRUPT
  7+  8050 81          >					db			INTERRUPT
  7+  8051 81          >					db			INTERRUPT
  7+  8052 81          >					db			INTERRUPT
  7+  8053 81          >					db			INTERRUPT
  7+  8054 81          >					db			INTERRUPT
  7+  8055 81          >					db			INTERRUPT
  7+  8056 81          >					db			INTERRUPT
  7+  8057 81          >					db			INTERRUPT
  7+  8058 81          >					db			INTERRUPT
  7+  8059 81          >					db			INTERRUPT
  7+  805A 81          >					db			INTERRUPT
  7+  805B 81          >					db			INTERRUPT
  7+  805C 81          >					db			INTERRUPT
  7+  805D 81          >					db			INTERRUPT
  7+  805E 81          >					db			INTERRUPT
  7+  805F 81          >					db			INTERRUPT
  7+  8060 81          >					db			INTERRUPT
  7+  8061 81          >					db			INTERRUPT
  7+  8062 81          >					db			INTERRUPT
  7+  8063 81          >					db			INTERRUPT
  7+  8064 81          >					db			INTERRUPT
  7+  8065 81          >					db			INTERRUPT
  7+  8066 81          >					db			INTERRUPT
  7+  8067 81          >					db			INTERRUPT
  7+  8068 81          >					db			INTERRUPT
  7+  8069 81          >					db			INTERRUPT
  7+  806A 81          >					db			INTERRUPT
  7+  806B 81          >					db			INTERRUPT
  7+  806C 81          >					db			INTERRUPT
  7+  806D 81          >					db			INTERRUPT
  7+  806E 81          >					db			INTERRUPT
  7+  806F 81          >					db			INTERRUPT
  7+  8070 81          >					db			INTERRUPT
  7+  8071 81          >					db			INTERRUPT
  7+  8072 81          >					db			INTERRUPT
  7+  8073 81          >					db			INTERRUPT
  7+  8074 81          >					db			INTERRUPT
  7+  8075 81          >					db			INTERRUPT
  7+  8076 81          >					db			INTERRUPT
  7+  8077 81          >					db			INTERRUPT
  7+  8078 81          >					db			INTERRUPT
  7+  8079 81          >					db			INTERRUPT
  7+  807A 81          >					db			INTERRUPT
  7+  807B 81          >					db			INTERRUPT
  7+  807C 81          >					db			INTERRUPT
  7+  807D 81          >					db			INTERRUPT
  7+  807E 81          >					db			INTERRUPT
  7+  807F 81          >					db			INTERRUPT
  7+  8080 81          >					db			INTERRUPT
  7+  8081 81          >					db			INTERRUPT
  7+  8082 81          >					db			INTERRUPT
  7+  8083 81          >					db			INTERRUPT
  7+  8084 81          >					db			INTERRUPT
  7+  8085 81          >					db			INTERRUPT
  7+  8086 81          >					db			INTERRUPT
  7+  8087 81          >					db			INTERRUPT
  7+  8088 81          >					db			INTERRUPT
  7+  8089 81          >					db			INTERRUPT
  7+  808A 81          >					db			INTERRUPT
  7+  808B 81          >					db			INTERRUPT
  7+  808C 81          >					db			INTERRUPT
  7+  808D 81          >					db			INTERRUPT
  7+  808E 81          >					db			INTERRUPT
  7+  808F 81          >					db			INTERRUPT
  7+  8090 81          >					db			INTERRUPT
  7+  8091 81          >					db			INTERRUPT
  7+  8092 81          >					db			INTERRUPT
  7+  8093 81          >					db			INTERRUPT
  7+  8094 81          >					db			INTERRUPT
  7+  8095 81          >					db			INTERRUPT
  7+  8096 81          >					db			INTERRUPT
  7+  8097 81          >					db			INTERRUPT
  7+  8098 81          >					db			INTERRUPT
  7+  8099 81          >					db			INTERRUPT
  7+  809A 81          >					db			INTERRUPT
  7+  809B 81          >					db			INTERRUPT
  7+  809C 81          >					db			INTERRUPT
  7+  809D 81          >					db			INTERRUPT
  7+  809E 81          >					db			INTERRUPT
  7+  809F 81          >					db			INTERRUPT
  7+  80A0 81          >					db			INTERRUPT
  7+  80A1 81          >					db			INTERRUPT
  7+  80A2 81          >					db			INTERRUPT
  7+  80A3 81          >					db			INTERRUPT
  7+  80A4 81          >					db			INTERRUPT
  7+  80A5 81          >					db			INTERRUPT
  7+  80A6 81          >					db			INTERRUPT
  7+  80A7 81          >					db			INTERRUPT
  7+  80A8 81          >					db			INTERRUPT
  7+  80A9 81          >					db			INTERRUPT
  7+  80AA 81          >					db			INTERRUPT
  7+  80AB 81          >					db			INTERRUPT
  7+  80AC 81          >					db			INTERRUPT
  7+  80AD 81          >					db			INTERRUPT
  7+  80AE 81          >					db			INTERRUPT
  7+  80AF 81          >					db			INTERRUPT
  7+  80B0 81          >					db			INTERRUPT
  7+  80B1 81          >					db			INTERRUPT
  7+  80B2 81          >					db			INTERRUPT
  7+  80B3 81          >					db			INTERRUPT
  7+  80B4 81          >					db			INTERRUPT
  7+  80B5 81          >					db			INTERRUPT
  7+  80B6 81          >					db			INTERRUPT
  7+  80B7 81          >					db			INTERRUPT
  7+  80B8 81          >					db			INTERRUPT
  7+  80B9 81          >					db			INTERRUPT
  7+  80BA 81          >					db			INTERRUPT
  7+  80BB 81          >					db			INTERRUPT
  7+  80BC 81          >					db			INTERRUPT
  7+  80BD 81          >					db			INTERRUPT
  7+  80BE 81          >					db			INTERRUPT
  7+  80BF 81          >					db			INTERRUPT
  7+  80C0 81          >					db			INTERRUPT
  7+  80C1 81          >					db			INTERRUPT
  7+  80C2 81          >					db			INTERRUPT
  7+  80C3 81          >					db			INTERRUPT
  7+  80C4 81          >					db			INTERRUPT
  7+  80C5 81          >					db			INTERRUPT
  7+  80C6 81          >					db			INTERRUPT
  7+  80C7 81          >					db			INTERRUPT
  7+  80C8 81          >					db			INTERRUPT
  7+  80C9 81          >					db			INTERRUPT
  7+  80CA 81          >					db			INTERRUPT
  7+  80CB 81          >					db			INTERRUPT
  7+  80CC 81          >					db			INTERRUPT
  7+  80CD 81          >					db			INTERRUPT
  7+  80CE 81          >					db			INTERRUPT
  7+  80CF 81          >					db			INTERRUPT
  7+  80D0 81          >					db			INTERRUPT
  7+  80D1 81          >					db			INTERRUPT
  7+  80D2 81          >					db			INTERRUPT
  7+  80D3 81          >					db			INTERRUPT
  7+  80D4 81          >					db			INTERRUPT
  7+  80D5 81          >					db			INTERRUPT
  7+  80D6 81          >					db			INTERRUPT
  7+  80D7 81          >					db			INTERRUPT
  7+  80D8 81          >					db			INTERRUPT
  7+  80D9 81          >					db			INTERRUPT
  7+  80DA 81          >					db			INTERRUPT
  7+  80DB 81          >					db			INTERRUPT
  7+  80DC 81          >					db			INTERRUPT
  7+  80DD 81          >					db			INTERRUPT
  7+  80DE 81          >					db			INTERRUPT
  7+  80DF 81          >					db			INTERRUPT
  7+  80E0 81          >					db			INTERRUPT
  7+  80E1 81          >					db			INTERRUPT
  7+  80E2 81          >					db			INTERRUPT
  7+  80E3 81          >					db			INTERRUPT
  7+  80E4 81          >					db			INTERRUPT
  7+  80E5 81          >					db			INTERRUPT
  7+  80E6 81          >					db			INTERRUPT
  7+  80E7 81          >					db			INTERRUPT
  7+  80E8 81          >					db			INTERRUPT
  7+  80E9 81          >					db			INTERRUPT
  7+  80EA 81          >					db			INTERRUPT
  7+  80EB 81          >					db			INTERRUPT
  7+  80EC 81          >					db			INTERRUPT
  7+  80ED 81          >					db			INTERRUPT
  7+  80EE 81          >					db			INTERRUPT
  7+  80EF 81          >					db			INTERRUPT
  7+  80F0 81          >					db			INTERRUPT
  7+  80F1 81          >					db			INTERRUPT
  7+  80F2 81          >					db			INTERRUPT
  7+  80F3 81          >					db			INTERRUPT
  7+  80F4 81          >					db			INTERRUPT
  7+  80F5 81          >					db			INTERRUPT
  7+  80F6 81          >					db			INTERRUPT
  7+  80F7 81          >					db			INTERRUPT
  7+  80F8 81          >					db			INTERRUPT
  7+  80F9 81          >					db			INTERRUPT
  7+  80FA 81          >					db			INTERRUPT
  7+  80FB 81          >					db			INTERRUPT
  7+  80FC 81          >					db			INTERRUPT
  7+  80FD 81          >					db			INTERRUPT
  7+  80FE 81          >					db			INTERRUPT
  7+  80FF 81          >					db			INTERRUPT
  7+  8100 81          >					db			INTERRUPT
  8+  8101              					edup
  9+  8101
 10+  8101 00 00 00...  					ds			(INTERRUPT*256+INTERRUPT)-$
 11+  8181
 12+  8181              					org			(INTERRUPT*256+INTERRUPT)
 13+  8181
 14+  8181 F5           interrupt:			push		af
 15+  8182 C5           					push		bc
 16+  8183 D5           					push		de
 17+  8184 E5           					push		hl
 18+  8185 08           					ex			af, af'
 19+  8186 D9           					exx
 20+  8187 F5           					push		af
 21+  8188 C5           					push		bc
 22+  8189 D5           					push		de
 23+  818A E5           					push		hl
 24+  818B DD E5        					push		ix
 25+  818D FD E5        					push		iy
 26+  818F
 27+  818F 21 D8 81     					ld			hl, FramesPending
 28+  8192 34           					inc			(hl)
 29+  8193
 30+  8193              					; рисуем спрайты
 31+  8193
 32+  8193 DD 21 8A 83  					ld			ix, player1
 33+  8197 CD 93 83     					call		DrawPlayer
 34+  819A
 35+  819A              					; готово
 36+  819A
 37+  819A FD E1        					pop			iy
 38+  819C DD E1        					pop			ix
 39+  819E E1           					pop			hl
 40+  819F D1           					pop			de
 41+  81A0 C1           					pop			bc
 42+  81A1 F1           					pop			af
 43+  81A2 08           					ex			af, af'
 44+  81A3 D9           					exx
 45+  81A4 E1           					pop			hl
 46+  81A5 D1           					pop			de
 47+  81A6 C1           					pop			bc
 48+  81A7 F1           					pop			af
 49+  81A8 FB           					ei
 50+  81A9 C9           					ret
 51+  81AA
# file closed: irq.asm
  7   81AA
  8   81AA F3           start:				di
  9   81AB 31 00 00     					ld			sp, stack_top
 10   81AE 3E 80        					ld			a, 80h
 11   81B0 ED 47        					ld			i, a
 12   81B2 ED 5E        					im			2
 13   81B4 FB           					ei
 14   81B5
 15   81B5 3E 00        					ld			a, 00h
 16   81B7 CD D9 81     					call		ClearScreen
 17   81BA
 18   81BA DD 21 8A 83  					ld			ix, player1
 19   81BE CD 8E 83     					call		InitPlayer
 20   81C1
 21   81C1 21 D8 81     .mainLoop:			ld			hl, FramesPending
 22   81C4 AF           					xor			a
 23   81C5 BE           					cp			(hl)
 24   81C6 28 0D        					jr			z, .halt
 25   81C8 35           					dec			(hl)
 26   81C9
 27   81C9 CD 55 83     					call		ReadInput
 28   81CC
 29   81CC DD 21 8A 83  					ld			ix, player1
 30   81D0 CD 3D 84     					call		HandlePlayer
 31   81D3
 32   81D3 18 EC        					jr			.mainLoop
 33   81D5
 34   81D5 76           .halt:				halt
 35   81D6 18 E9        					jr			.mainLoop
 36   81D8
 37   81D8 00           FramesPending:		db			0
 38   81D9
 39   81D9              					include		"draw.asm"
# file opened: draw.asm
  1+  81D9
  2+  81D9              				; Input:
  3+  81D9              				;   A = attribute
  4+  81D9
  5+  81D9              ClearScreen:	; очищаем пиксели
  6+  81D9 21 00 40     				ld		hl, 4000h
  7+  81DC 5D           				ld      e, l
  8+  81DD 54           				ld		d, h
  9+  81DE 36 00        				ld		(hl), 0
 10+  81E0 13           				inc		de
 11+  81E1 01 00 18     				ld		bc, 1800h
 12+  81E4 ED B0        				ldir
 13+  81E6              				; очищаем атрибуты
 14+  81E6 77           				ld		(hl), a
 15+  81E7 01 FF 02     				ld		bc, 300h-1
 16+  81EA ED B0        				ldir
 17+  81EC C9           				ret
 18+  81ED
 19+  81ED                              ; Input:
 20+  81ED                              ;   C = X
 21+  81ED                              ;   B = Y (знакоместо)
 22+  81ED                              ;   IYH = старший байт адреса
 23+  81ED                              ; Output:
 24+  81ED                              ;   DE => screen addr
 25+  81ED
 26+  81ED              CalcScreenAddr: ; Преобразуем координату Y в пикселях в значение в знакоместах
 27+  81ED 78                           ld		a, b
 28+  81EE 17                           rla
 29+  81EF 17                           rla
 30+  81F0 17                           rla
 31+  81F1 E6 F8                        and		0xf8
 32+  81F3              ; альтернативная точка входа, A = Y (пиксели)
 33+  81F3              CalcScreenAddrPix:
 34+  81F3 47                           ld		b, a
 35+  81F4                              ; Расчитываем адрес на экране
 36+  81F4 17                           rla                                 ; A = ? |Y5|Y4|Y3| ?| ?| ?| ?
 37+  81F5 17                           rla                                 ; A = Y5|Y4|Y3| ?| ?| ?| ?| ?
 38+  81F6 E6 E0                        and     0xe0            ; 1110 0000 ; A = Y5|Y4|Y3| 0| 0| 0| 0| 0
 39+  81F8 B1                           or      c               ;             A = Y5|Y4|Y3|X4|X3|X2|X1|X0
 40+  81F9 5F                           ld      e, a
 41+  81FA 78                           ld      a, b
 42+  81FB 1F                           rra
 43+  81FC 1F                           rra
 44+  81FD 1F                           rra                                 ; A =  ?| ?| ?|Y7|Y6| ?| ?| ?
 45+  81FE E6 18                        and     0x18                        ; A =  0| 0| 0|Y7|Y6| 0| 0| 0
 46+  8200 57                           ld      d, a
 47+  8201 78                           ld      a, b
 48+  8202 E6 07                        and     0x07                        ; A =  0| 0| 0| 0| 0|Y2|Y1|Y0
 49+  8204 B2                           or      d                           ; A =  0| 0| 0|Y7|Y6|Y2|Y1|Y0
 50+  8205 FD B4                        or      iyh                         ; A =  0| 1| 0|Y7|Y6|Y2|Y1|Y0
 51+  8207 57                           ld      d, a
 52+  8208 C9                           ret
 53+  8209
 54+  8209                              ; Input:
 55+  8209                              ;   C = X (знакоместо)
 56+  8209                              ;   B = Y (знакоместо)
 57+  8209                              ;   D = дополнительный сдвиг по Y (-7..7)
 58+  8209
 59+  8209              DrawEmptyByte:	; Расчитываем адрес назначения
 60+  8209 FD 26 40                     ld		iyh, 0x40
 61+  820C 78                           ld		a, b
 62+  820D 87                           add		a, a		; *2
 63+  820E 87                           add		a, a		; *4
 64+  820F 87                           add		a, a		; *8
 65+  8210 82                           add		a, d
 66+  8211 CD F3 81         			call    CalcScreenAddrPix
 67+  8214                  			; Записываем нулевой байт
 68+  8214 AF               			xor		a
 69+  8215 12               			ld		(de), a
 70+  8216 C9               			ret
 71+  8217
 72+  8217                              ; Input:
 73+  8217                              ;	A = атрибут
 74+  8217                              ;   E = дополнительный сдвиг по X (-7..7)
 75+  8217                              ;   D = дополнительный сдвиг по Y (-7..7)
 76+  8217                              ;   L = X спрайта (знакоместо)
 77+  8217                              ;   H = Y спрайта (знакоместо)
 78+  8217                              ;   C = X (знакоместо)
 79+  8217                              ;   B = Y (знакоместо)
 80+  8217
 81+  8217              DrawChar:    	; Сохраняем А
 82+  8217 08                           ex      af, af'
 83+  8218                              ; Патчим код
 84+  8218 7B                           ld		a, e
 85+  8219 32 37 82                     ld		(.hotPatch+2), a
 86+  821C              				; Расчитываем адрес назначения
 87+  821C FD 26 40                     ld		iyh, 0x40
 88+  821F 78                           ld		a, b
 89+  8220 87                           add		a, a		; *2
 90+  8221 87                           add		a, a		; *4
 91+  8222 87                           add		a, a		; *8
 92+  8223 82                           add		a, d
 93+  8224 CD F3 81         			call    CalcScreenAddrPix
 94+  8227 D5                           push	de
 95+  8228                              ; Преобразуем координату Y спрайта в адрес в SCR
 96+  8228 44                           ld		b, h
 97+  8229 4D                           ld		c, l
 98+  822A EB                           ex		de, hl		; сохраню DE в HL
 99+  822B                              ; Расчитываем адрес спрайта
100+  822B FD 26 A0                     ld		iyh, high gfx
101+  822E CD ED 81                     call	CalcScreenAddr
102+  8231
103+  8231 FD 21 48 82  				ld		iy, .table
104+  8235 FD 4E 00     .hotPatch:		ld		c, (iy+0)
105+  8238 06 00        				ld		b, 0
106+  823A FD 09        				add		iy, bc
107+  823C 06 08                        ld      b, 8		; счетчик для цикла
108+  823E FD E9        				jp		(iy)
109+  8240
110+  8240 09           				db		.empty-.table
111+  8241 13           				db		.shiftM7-.table
112+  8242 21           				db		.shiftM6-.table
113+  8243 30           				db		.shiftM5-.table
114+  8244 40           				db		.shiftM4-.table
115+  8245 51           				db		.shiftM3-.table
116+  8246 61           				db		.shiftM2-.table
117+  8247 6F           				db		.shiftM1-.table
118+  8248 7B           .table:			db		.noShift-.table
119+  8249 85           				db		.shift1-.table
120+  824A 91           				db		.shift2-.table
121+  824B 9F           				db		.shift3-.table
122+  824C AE           				db		.shift4-.table
123+  824D BE           				db		.shift5-.table
124+  824E CD           				db		.shift6-.table
125+  824F DB           				db		.shift7-.table
126+  8250 09           				db		.empty-.table
127+  8251
128+  8251 AF           .empty:       	xor		a
129+  8252 77           				ld      (hl), a
130+  8253 CD 46 83                     call	DownHL
131+  8256 10 F9                        djnz    .empty
132+  8258 C3 2E 83                     jp		.charDone
133+  825B
134+  825B 1A           .shiftM7:       ld      a, (de)
135+  825C 0F           				rrca
136+  825D E6 80        				and		0x80
137+  825F 77                           ld      (hl), a
138+  8260 14                           inc     d
139+  8261 CD 46 83                     call	DownHL
140+  8264 10 F5                        djnz    .shiftM7
141+  8266 C3 2E 83                     jp		.charDone
142+  8269
143+  8269 1A           .shiftM6:       ld      a, (de)
144+  826A 0F           				rrca
145+  826B 0F           				rrca
146+  826C E6 C0        				and		0xc0
147+  826E 77                           ld      (hl), a
148+  826F 14                           inc     d
149+  8270 CD 46 83                     call	DownHL
150+  8273 10 F4                        djnz    .shiftM6
151+  8275 C3 2E 83                     jp		.charDone
152+  8278
153+  8278 1A           .shiftM5:       ld      a, (de)
154+  8279              				dup		3
155+  8279 0F          >				rrca
155+  827A 0F          >				rrca
155+  827B 0F          >				rrca
156+  827C              				edup
157+  827C E6 E0        				and		0xe0
158+  827E 77                           ld      (hl), a
159+  827F 14                           inc     d
160+  8280 CD 46 83                     call	DownHL
161+  8283 10 F3                        djnz    .shiftM5
162+  8285 C3 2E 83                     jp		.charDone
163+  8288
164+  8288 1A           .shiftM4:       ld      a, (de)
165+  8289              				dup		4
166+  8289 07          >				rlca
166+  828A 07          >				rlca
166+  828B 07          >				rlca
166+  828C 07          >				rlca
167+  828D              				edup
168+  828D E6 F0        				and		0xf0
169+  828F 77                           ld      (hl), a
170+  8290 14                           inc     d
171+  8291 CD 46 83                     call	DownHL
172+  8294 10 F2                        djnz    .shiftM4
173+  8296 C3 2E 83                     jp		.charDone
174+  8299
175+  8299 1A           .shiftM3:       ld      a, (de)
176+  829A              				dup		3
177+  829A 07          >				rlca
177+  829B 07          >				rlca
177+  829C 07          >				rlca
178+  829D              				edup
179+  829D E6 F8        				and		0xf8
180+  829F 77                           ld      (hl), a
181+  82A0 14                           inc     d
182+  82A1 CD 46 83                     call	DownHL
183+  82A4 10 F3                        djnz    .shiftM3
184+  82A6 C3 2E 83                     jp		.charDone
185+  82A9
186+  82A9 1A           .shiftM2:       ld      a, (de)
187+  82AA 07           				rlca
188+  82AB 07           				rlca
189+  82AC E6 FC        				and		0xfc
190+  82AE 77                           ld      (hl), a
191+  82AF 14                           inc     d
192+  82B0 CD 46 83                     call	DownHL
193+  82B3 10 F4                        djnz    .shiftM2
194+  82B5 18 77                        jr		.charDone
195+  82B7
196+  82B7 1A           .shiftM1:       ld      a, (de)
197+  82B8 CB 27        				sla		a
198+  82BA 77                           ld      (hl), a
199+  82BB 14                           inc     d
200+  82BC CD 46 83                     call	DownHL
201+  82BF 10 F6                        djnz    .shiftM1
202+  82C1 18 6B                        jr		.charDone
203+  82C3
204+  82C3 1A           .noShift:       ld      a, (de)
205+  82C4 77                           ld      (hl), a
206+  82C5 14                           inc     d
207+  82C6 CD 46 83                     call	DownHL
208+  82C9 10 F8                        djnz    .noShift
209+  82CB 18 61                        jr		.charDone
210+  82CD
211+  82CD 1A           .shift1:       	ld      a, (de)
212+  82CE CB 3F        				srl		a
213+  82D0 77                           ld      (hl), a
214+  82D1 14                           inc     d
215+  82D2 CD 46 83                     call	DownHL
216+  82D5 10 F6                        djnz    .shift1
217+  82D7 18 55                        jr		.charDone
218+  82D9
219+  82D9 1A           .shift2:       	ld      a, (de)
220+  82DA 0F           				rrca
221+  82DB 0F           				rrca
222+  82DC E6 3F        				and		0x3f
223+  82DE 77                           ld      (hl), a
224+  82DF 14                           inc     d
225+  82E0 CD 46 83                     call	DownHL
226+  82E3 10 F4                        djnz    .shift2
227+  82E5 18 47                        jr		.charDone
228+  82E7
229+  82E7 1A           .shift3:       	ld      a, (de)
230+  82E8              				dup		3
231+  82E8 0F          >				rrca
231+  82E9 0F          >				rrca
231+  82EA 0F          >				rrca
232+  82EB              				edup
233+  82EB E6 1F        				and		0x1f
234+  82ED 77                           ld      (hl), a
235+  82EE 14                           inc     d
236+  82EF CD 46 83                     call	DownHL
237+  82F2 10 F3                        djnz    .shift3
238+  82F4 18 38                        jr		.charDone
239+  82F6
240+  82F6 1A           .shift4:       	ld      a, (de)
241+  82F7              				dup		4
242+  82F7 0F          >				rrca
242+  82F8 0F          >				rrca
242+  82F9 0F          >				rrca
242+  82FA 0F          >				rrca
243+  82FB              				edup
244+  82FB E6 0F        				and		0x0f
245+  82FD 77                           ld      (hl), a
246+  82FE 14                           inc     d
247+  82FF CD 46 83                     call	DownHL
248+  8302 10 F2                        djnz    .shift4
249+  8304 18 28                        jr		.charDone
250+  8306
251+  8306 1A           .shift5:       	ld      a, (de)
252+  8307              				dup		3
253+  8307 07          >				rlca
253+  8308 07          >				rlca
253+  8309 07          >				rlca
254+  830A              				edup
255+  830A E6 07        				and		0x07
256+  830C 77                           ld      (hl), a
257+  830D 14                           inc     d
258+  830E CD 46 83                     call	DownHL
259+  8311 10 F3                        djnz    .shift5
260+  8313 18 19                        jr		.charDone
261+  8315
262+  8315 1A           .shift6:       	ld      a, (de)
263+  8316              				dup		2
264+  8316 07          >				rlca
264+  8317 07          >				rlca
265+  8318              				edup
266+  8318 E6 03        				and		0x03
267+  831A 77                           ld      (hl), a
268+  831B 14                           inc     d
269+  831C CD 46 83                     call	DownHL
270+  831F 10 F4                        djnz    .shift6
271+  8321 18 0B                        jr		.charDone
272+  8323
273+  8323 1A           .shift7:       	ld      a, (de)
274+  8324 07           				rlca
275+  8325 E6 01        				and		0x01
276+  8327 77                           ld      (hl), a
277+  8328 14                           inc     d
278+  8329 CD 46 83                     call	DownHL
279+  832C 10 F5                        djnz    .shift7
280+  832E                              ;jr		.charDone
281+  832E
282+  832E              .charDone: 		; Получаем из стека начальный адрес на экране
283+  832E E1           				pop		hl
284+  832F 4C           				ld		c, h				; сохраняем старший байт в C для проверки внизу
285+  8330              				; Расчитываем адрес в области атрибутов
286+  8330 7C                           ld      a, h
287+  8331 1F                  			rra
288+  8332 1F                           rra
289+  8333 1F                           rra
290+  8334 E6 03                        and     0x03
291+  8336 F6 58                        or      0x58
292+  8338 67                           ld      h, a
293+  8339                              ; Восстанавливаем A
294+  8339 08                           ex      af, af'
295+  833A                              ; Записываем атрибут
296+  833A 77                           ld      (hl), a
297+  833B                              ; Сохраняем атрибут в B
298+  833B 47                           ld		b, a
299+  833C                              ; Проверяем, нужно ли рисовать второй атрибут
300+  833C 3E 07                        ld		a, 7
301+  833E A1                           and		c
302+  833F C8                           ret		z				; мы на границе знакоместа, второй атрибут не нужен
303+  8340              				; Переходим на следующую строку в атрибутах
304+  8340 11 20 00                     ld		de, 32
305+  8343 19                           add		hl, de
306+  8344              				; Записываем второй атрибут
307+  8344 70                           ld		(hl), b
308+  8345 C9                           ret
309+  8346
310+  8346                              ; Input:
311+  8346                              ;	HL => адрес байта (8 пикселей) на экране
312+  8346                              ; Output:
313+  8346                              ;   HL => адрес байта (8 пикселей) в следующей строке (Y = Y + 1)
314+  8346
315+  8346 24           DownHL:			inc		h
316+  8347 3E 07        				ld		a, 00000111b	; 7=8-1;  остаток от деления на 8
317+  8349 A4           				and		h
318+  834A C0           				ret		nz
319+  834B 7D           				ld		a, l			; L = L + 32
320+  834C D6 E0        				sub		-32
321+  834E 6F           				ld		l, a
322+  834F 9F           				sbc		a, a			; 0 = no carry, -1 (0xff 11111111) = was carry
323+  8350 E6 F8        				and		-8				; 0 = no carry, -8 (0xf8 11111000) = was carry
324+  8352 84           				add		a, h
325+  8353 67           				ld		h, a
326+  8354 C9           				ret
327+  8355
# file closed: draw.asm
 40   8355              					include		"input.asm"
# file opened: input.asm
  1+  8355
  2+  8355 01 FE FB     ReadInput:			ld			bc, 0xfbfe
  3+  8358 ED 78        					in			a, (c)
  4+  835A E6 01        					and			1					; Q
  5+  835C 32 87 83     					ld			(Input.up), a
  6+  835F
  7+  835F 01 FE FD     					ld			bc, 0xfdfe
  8+  8362 ED 78        					in			a, (c)
  9+  8364 E6 01        					and			1					; A
 10+  8366 32 88 83     					ld			(Input.down), a
 11+  8369
 12+  8369 01 FE DF     					ld			bc, 0xdffe
 13+  836C ED 78        					in			a, (c)
 14+  836E 47           					ld			b, a
 15+  836F E6 02        					and			2					; O
 16+  8371 32 85 83     					ld			(Input.left), a
 17+  8374
 18+  8374 78           					ld			a, b
 19+  8375 E6 01        					and			1					; P
 20+  8377 32 86 83     					ld			(Input.right), a
 21+  837A
 22+  837A 01 FE 7F     					ld			bc, 0x7ffe
 23+  837D ED 78        					in			a, (c)
 24+  837F E6 01        					and			1					; Space
 25+  8381 32 89 83     					ld			(Input.fire), a
 26+  8384
 27+  8384 C9           					ret
 28+  8385
 29+  8385              Input:
 30+  8385 01           .left:				db			1
 31+  8386 01           .right:				db			1
 32+  8387 01           .up:				db			1
 33+  8388 01           .down:				db			1
 34+  8389 01           .fire:				db			1
 35+  838A
# file closed: input.asm
 41   838A              					include		"player.asm"
# file opened: player.asm
  1+  838A
  2+  838A              PLAYER_IDLE			equ			0
  3+  838A              PLAYER_GO_LEFT		equ			2
  4+  838A              PLAYER_GO_RIGHT		equ			4
  5+  838A              PLAYER_GO_UP		equ			6
  6+  838A              PLAYER_GO_DOWN		equ			8
  7+  838A
  8+  838A              PLAYER_MAX_X		equ 		31
  9+  838A              PLAYER_MAX_Y		equ			23
 10+  838A
 11+  838A              PLAYER_MOVE_DELAY_BITS equ		1
 12+  838A
 13+  838A              PLAYER_ATTR			equ			0x4f
 14+  838A
 15+  838A              					struct 		SPLAYER
 16+  838A ~            x 					byte
 17+  838A ~            y 					byte
 18+  838A ~            state				byte
 19+  838A ~            time				byte
 20+  838A              					ends
 21+  838A
 22+  838A 05 02 00 00  player1:			SPLAYER		5,2,PLAYER_IDLE,0
 23+  838E
 24+  838E DD 36 02 00  InitPlayer:			ld			(ix+SPLAYER.state), PLAYER_IDLE
 25+  8392 C9           					ret
 26+  8393
 27+  8393 DD 4E 00     DrawPlayer:			ld			c, (ix+SPLAYER.x)
 28+  8396 DD 46 01     					ld			b, (ix+SPLAYER.y)
 29+  8399
 30+  8399 DD 6E 02     					ld			l, (ix+SPLAYER.state)
 31+  839C 26 00        					ld			h, 0
 32+  839E 11 A3 83     					ld			de, .jumpTable
 33+  83A1 19           					add			hl, de
 34+  83A2 E9           					jp			(hl)
 35+  83A3 18 08        .jumpTable:			jr			.drawIdle
 36+  83A5 18 10        					jr			.drawLeft
 37+  83A7 18 35        					jr			.drawRight
 38+  83A9 18 6F        					jr			.drawUp
 39+  83AB 18 57        					jr			.drawDown
 40+  83AD
 41+  83AD 21 00 00     .drawIdle:			ld			hl, 0x0000
 42+  83B0 54           					ld			d, h
 43+  83B1 5C           					ld			e, h
 44+  83B2 3E 4F        					ld			a, PLAYER_ATTR
 45+  83B4 C3 17 82     					jp			DrawChar
 46+  83B7
 47+  83B7 DD 7E 03     .drawLeft:			ld			a, (ix+SPLAYER.time)
 48+  83BA              					dup			PLAYER_MOVE_DELAY_BITS
 49+  83BA 0F          >					rrca
 50+  83BB              					edup
 51+  83BB E6 7F        					and			(1<<(8-PLAYER_MOVE_DELAY_BITS))-1
 52+  83BD 3C           					inc			a
 53+  83BE ED 44        					neg
 54+  83C0 5F           					ld			e, a
 55+  83C1 0F           					rrca
 56+  83C2 E6 01        					and			1
 57+  83C4 3C           					inc			a
 58+  83C5 6F           					ld			l, a
 59+  83C6 26 00        					ld			h, 0
 60+  83C8 54           					ld			d, h
 61+  83C9
 62+  83C9 E5           					push		hl
 63+  83CA D5           					push		de
 64+  83CB C5           					push		bc
 65+  83CC 3E 4F        					ld			a, PLAYER_ATTR
 66+  83CE 0C           					inc			c
 67+  83CF CD 17 82     					call		DrawChar
 68+  83D2 C1           					pop			bc
 69+  83D3 D1           					pop			de
 70+  83D4 E1           					pop			hl
 71+  83D5
 72+  83D5 3E 08        					ld			a, 8
 73+  83D7 83           					add			a, e
 74+  83D8 5F           					ld			e, a
 75+  83D9 3E 4F        					ld			a, PLAYER_ATTR
 76+  83DB C3 17 82     					jp			DrawChar
 77+  83DE
 78+  83DE DD 7E 03     .drawRight:			ld			a, (ix+SPLAYER.time)
 79+  83E1              					dup			PLAYER_MOVE_DELAY_BITS
 80+  83E1 0F          >					rrca
 81+  83E2              					edup
 82+  83E2 E6 7F        					and			(1<<(8-PLAYER_MOVE_DELAY_BITS))-1
 83+  83E4 3C           					inc			a
 84+  83E5 5F           					ld			e, a
 85+  83E6 0F           					rrca
 86+  83E7 E6 01        					and			1
 87+  83E9 C6 03        					add			a, 3
 88+  83EB 6F           					ld			l, a
 89+  83EC 26 00        					ld			h, 0
 90+  83EE 54           					ld			d, h
 91+  83EF
 92+  83EF E5           					push		hl
 93+  83F0 D5           					push		de
 94+  83F1 C5           					push		bc
 95+  83F2 3E 4F        					ld			a, PLAYER_ATTR
 96+  83F4 0D           					dec			c
 97+  83F5 CD 17 82     					call		DrawChar
 98+  83F8 C1           					pop			bc
 99+  83F9 D1           					pop			de
100+  83FA E1           					pop			hl
101+  83FB
102+  83FB 7B           					ld			a, e
103+  83FC D6 08        					sub			8
104+  83FE 5F           					ld			e, a
105+  83FF 3E 4F        					ld			a, PLAYER_ATTR
106+  8401 C3 17 82     					jp			DrawChar
107+  8404
108+  8404 DD 7E 03     .drawDown:			ld			a, (ix+SPLAYER.time)
109+  8407              					dup			PLAYER_MOVE_DELAY_BITS
110+  8407 0F          >					rrca
111+  8408              					edup
112+  8408 E6 7F        					and			(1<<(8-PLAYER_MOVE_DELAY_BITS))-1
113+  840A 3C           					inc			a
114+  840B 57           					ld			d, a
115+  840C E6 03        					and			3
116+  840E C6 05        					add			a, 5
117+  8410 6F           					ld			l, a
118+  8411 26 00        					ld			h, 0
119+  8413 5C           					ld			e, h
120+  8414
121+  8414 3E 4F        					ld			a, PLAYER_ATTR
122+  8416 05           					dec			b
123+  8417 C3 17 82     					jp			DrawChar
124+  841A
125+  841A DD 7E 03     .drawUp:			ld			a, (ix+SPLAYER.time)
126+  841D              					dup			PLAYER_MOVE_DELAY_BITS
127+  841D 0F          >					rrca
128+  841E              					edup
129+  841E E6 7F        					and			(1<<(8-PLAYER_MOVE_DELAY_BITS))-1
130+  8420 3C           					inc			a
131+  8421 ED 44        					neg
132+  8423 57           					ld			d, a
133+  8424 E6 03        					and			3
134+  8426 C6 05        					add			a, 5
135+  8428 6F           					ld			l, a
136+  8429 26 00        					ld			h, 0
137+  842B 5C           					ld			e, h
138+  842C
139+  842C 3E 4F        					ld			a, PLAYER_ATTR
140+  842E 04           					inc			b
141+  842F D5           					push		de
142+  8430 C5           					push		bc
143+  8431 CD 17 82     					call		DrawChar
144+  8434 C1           					pop			bc
145+  8435 D1           					pop			de
146+  8436
147+  8436 3E 08        					ld			a, 8
148+  8438 82           					add			a, d
149+  8439 57           					ld			d, a
150+  843A C3 09 82     					jp			DrawEmptyByte
151+  843D
152+  843D DD 6E 02     HandlePlayer:		ld			l, (ix+SPLAYER.state)
153+  8440 26 00        					ld			h, 0
154+  8442 01 47 84     					ld			bc, .jumpTable
155+  8445 09           					add			hl, bc
156+  8446 E9           					jp			(hl)
157+  8447 18 1C        .jumpTable:			jr			.idle
158+  8449 18 06        					jr			.move
159+  844B 18 04        					jr			.move
160+  844D 18 02        					jr			.move
161+  844F 18 00        					jr			.move
162+  8451
163+  8451 DD 7E 03     .move:				ld			a, (ix+SPLAYER.time)
164+  8454 3C           					inc			a
165+  8455 FE 10        					cp			(8<<PLAYER_MOVE_DELAY_BITS)
166+  8457 28 04        					jr			z, .moveDone
167+  8459 DD 77 03     					ld			(ix+SPLAYER.time), a
168+  845C C9           					ret
169+  845D DD 36 02 00  .moveDone:			ld			(ix+SPLAYER.state), PLAYER_IDLE
170+  8461 DD 36 03 00  					ld			(ix+SPLAYER.time), 0
171+  8465              					;jr			.idle
172+  8465
173+  8465 21 85 83     .idle:				ld			hl, Input.left
174+  8468 AF           					xor			a
175+  8469 BE           					cp			(hl)
176+  846A 28 0D        					jr			z, .goLeft
177+  846C
178+  846C 23           					inc			hl
179+  846D BE           					cp			(hl)
180+  846E 28 1A        					jr			z, .goRight
181+  8470
182+  8470 23           					inc			hl
183+  8471 BE           					cp			(hl)
184+  8472 28 28        					jr			z, .goUp
185+  8474
186+  8474 23           					inc			hl
187+  8475 BE           					cp			(hl)
188+  8476 28 35        					jr			z, .goDown
189+  8478
190+  8478 C9           					ret
191+  8479
192+  8479 DD 7E 00     .goLeft:			ld			a, (ix+SPLAYER.x)
193+  847C B7           					or			a
194+  847D C8           					ret			z
195+  847E DD 35 00     					dec			(ix+SPLAYER.x)
196+  8481 DD 36 02 02  					ld			(ix+SPLAYER.state), PLAYER_GO_LEFT
197+  8485 DD 36 03 00  					ld			(ix+SPLAYER.time), 0
198+  8489 C9           					ret
199+  848A
200+  848A DD 7E 00     .goRight:			ld			a, (ix+SPLAYER.x)
201+  848D FE 1F        					cp			PLAYER_MAX_X
202+  848F C8           					ret			z
203+  8490 DD 34 00     					inc			(ix+SPLAYER.x)
204+  8493 DD 36 02 04  					ld			(ix+SPLAYER.state), PLAYER_GO_RIGHT
205+  8497 DD 36 03 00  					ld			(ix+SPLAYER.time), 0
206+  849B C9           					ret
207+  849C
208+  849C DD 7E 01     .goUp:				ld			a, (ix+SPLAYER.y)
209+  849F B7           					or			a
210+  84A0 C8           					ret			z
211+  84A1 DD 35 01     					dec			(ix+SPLAYER.y)
212+  84A4 DD 36 02 06  					ld			(ix+SPLAYER.state), PLAYER_GO_UP
213+  84A8 DD 36 03 00  					ld			(ix+SPLAYER.time), 0
214+  84AC C9           					ret
215+  84AD
216+  84AD DD 7E 01     .goDown:			ld			a, (ix+SPLAYER.y)
217+  84B0 FE 17        					cp			PLAYER_MAX_Y
218+  84B2 C8           					ret			z
219+  84B3 DD 34 01     					inc			(ix+SPLAYER.y)
220+  84B6 DD 36 02 08  					ld			(ix+SPLAYER.state), PLAYER_GO_DOWN
221+  84BA DD 36 03 00  					ld			(ix+SPLAYER.time), 0
222+  84BE C9           					ret
223+  84BF
# file closed: player.asm
 42   84BF
 43   84BF 00 00 00...  					ds			0xa000-$
 44   A000              					org			0xa000
 45   A000
 46   A000              gfx:				incbin		"gfx/gfx.scr"
 47   BB00
 48   BB00              					savesna 	"game.sna", start
 49   BB00              					SLDOPT 		COMMENT WPMEM, LOGPOINT, ASSERTION
 50   BB00
# file closed: game.asm
